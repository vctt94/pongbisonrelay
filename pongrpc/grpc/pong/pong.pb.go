// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pong.proto

package pong

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Notification Messages
type NotificationType int32

const (
	NotificationType_UNKNOWN               NotificationType = 0
	NotificationType_MESSAGE               NotificationType = 1
	NotificationType_GAME_START            NotificationType = 2
	NotificationType_GAME_END              NotificationType = 3
	NotificationType_OPPONENT_DISCONNECTED NotificationType = 4
	NotificationType_BET_AMOUNT_UPDATE     NotificationType = 5
	NotificationType_PLAYER_JOINED_WR      NotificationType = 6
	NotificationType_ON_WR_CREATED         NotificationType = 7
	NotificationType_ON_PLAYER_READY       NotificationType = 8
	NotificationType_ON_WR_REMOVED         NotificationType = 9
	NotificationType_PLAYER_LEFT_WR        NotificationType = 10
	NotificationType_COUNTDOWN_UPDATE      NotificationType = 11
	NotificationType_GAME_READY_TO_PLAY    NotificationType = 12
	NotificationType_MATCH_ALLOCATED       NotificationType = 13
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "MESSAGE",
		2:  "GAME_START",
		3:  "GAME_END",
		4:  "OPPONENT_DISCONNECTED",
		5:  "BET_AMOUNT_UPDATE",
		6:  "PLAYER_JOINED_WR",
		7:  "ON_WR_CREATED",
		8:  "ON_PLAYER_READY",
		9:  "ON_WR_REMOVED",
		10: "PLAYER_LEFT_WR",
		11: "COUNTDOWN_UPDATE",
		12: "GAME_READY_TO_PLAY",
		13: "MATCH_ALLOCATED",
	}
	NotificationType_value = map[string]int32{
		"UNKNOWN":               0,
		"MESSAGE":               1,
		"GAME_START":            2,
		"GAME_END":              3,
		"OPPONENT_DISCONNECTED": 4,
		"BET_AMOUNT_UPDATE":     5,
		"PLAYER_JOINED_WR":      6,
		"ON_WR_CREATED":         7,
		"ON_PLAYER_READY":       8,
		"ON_WR_REMOVED":         9,
		"PLAYER_LEFT_WR":        10,
		"COUNTDOWN_UPDATE":      11,
		"GAME_READY_TO_PLAY":    12,
		"MATCH_ALLOCATED":       13,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_pong_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_pong_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

// === Phase 1 streaming messages ===
type ClientMsg struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	MatchId string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ClientMsg_Hello
	//	*ClientMsg_Presigs
	//	*ClientMsg_Ack
	//	*ClientMsg_VerifyOk
	Kind          isClientMsg_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMsg) Reset() {
	*x = ClientMsg{}
	mi := &file_pong_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMsg) ProtoMessage() {}

func (x *ClientMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMsg.ProtoReflect.Descriptor instead.
func (*ClientMsg) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMsg) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *ClientMsg) GetKind() isClientMsg_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ClientMsg) GetHello() *Hello {
	if x != nil {
		if x, ok := x.Kind.(*ClientMsg_Hello); ok {
			return x.Hello
		}
	}
	return nil
}

func (x *ClientMsg) GetPresigs() *PreSigBatch {
	if x != nil {
		if x, ok := x.Kind.(*ClientMsg_Presigs); ok {
			return x.Presigs
		}
	}
	return nil
}

func (x *ClientMsg) GetAck() *Ack {
	if x != nil {
		if x, ok := x.Kind.(*ClientMsg_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *ClientMsg) GetVerifyOk() *VerifyOk {
	if x != nil {
		if x, ok := x.Kind.(*ClientMsg_VerifyOk); ok {
			return x.VerifyOk
		}
	}
	return nil
}

type isClientMsg_Kind interface {
	isClientMsg_Kind()
}

type ClientMsg_Hello struct {
	Hello *Hello `protobuf:"bytes,10,opt,name=hello,proto3,oneof"`
}

type ClientMsg_Presigs struct {
	// Deprecated: presigs/ack split. Use verify_ok.
	Presigs *PreSigBatch `protobuf:"bytes,11,opt,name=presigs,proto3,oneof"`
}

type ClientMsg_Ack struct {
	Ack *Ack `protobuf:"bytes,12,opt,name=ack,proto3,oneof"`
}

type ClientMsg_VerifyOk struct {
	// New minimal handshake message carrying ack_digest and presigs.
	VerifyOk *VerifyOk `protobuf:"bytes,13,opt,name=verify_ok,json=verifyOk,proto3,oneof"`
}

func (*ClientMsg_Hello) isClientMsg_Kind() {}

func (*ClientMsg_Presigs) isClientMsg_Kind() {}

func (*ClientMsg_Ack) isClientMsg_Kind() {}

func (*ClientMsg_VerifyOk) isClientMsg_Kind() {}

type ServerMsg struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	MatchId string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ServerMsg_Req
	//	*ServerMsg_Reveal
	//	*ServerMsg_Info
	//	*ServerMsg_Ok
	Kind          isServerMsg_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMsg) Reset() {
	*x = ServerMsg{}
	mi := &file_pong_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMsg) ProtoMessage() {}

func (x *ServerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMsg.ProtoReflect.Descriptor instead.
func (*ServerMsg) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{1}
}

func (x *ServerMsg) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *ServerMsg) GetKind() isServerMsg_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ServerMsg) GetReq() *NeedPreSigs {
	if x != nil {
		if x, ok := x.Kind.(*ServerMsg_Req); ok {
			return x.Req
		}
	}
	return nil
}

func (x *ServerMsg) GetReveal() *RevealGamma {
	if x != nil {
		if x, ok := x.Kind.(*ServerMsg_Reveal); ok {
			return x.Reveal
		}
	}
	return nil
}

func (x *ServerMsg) GetInfo() *Info {
	if x != nil {
		if x, ok := x.Kind.(*ServerMsg_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *ServerMsg) GetOk() *ServerOk {
	if x != nil {
		if x, ok := x.Kind.(*ServerMsg_Ok); ok {
			return x.Ok
		}
	}
	return nil
}

type isServerMsg_Kind interface {
	isServerMsg_Kind()
}

type ServerMsg_Req struct {
	Req *NeedPreSigs `protobuf:"bytes,11,opt,name=req,proto3,oneof"`
}

type ServerMsg_Reveal struct {
	Reveal *RevealGamma `protobuf:"bytes,12,opt,name=reveal,proto3,oneof"` // Not used in minimal handshake; gamma delivered later via separate RPC.
}

type ServerMsg_Info struct {
	Info *Info `protobuf:"bytes,13,opt,name=info,proto3,oneof"`
}

type ServerMsg_Ok struct {
	// New handshake completion ack from server.
	Ok *ServerOk `protobuf:"bytes,14,opt,name=ok,proto3,oneof"`
}

func (*ServerMsg_Req) isServerMsg_Kind() {}

func (*ServerMsg_Reveal) isServerMsg_Kind() {}

func (*ServerMsg_Info) isServerMsg_Kind() {}

func (*ServerMsg_Ok) isServerMsg_Kind() {}

type Hello struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	CompPubkey    []byte                 `protobuf:"bytes,2,opt,name=comp_pubkey,json=compPubkey,proto3" json:"comp_pubkey,omitempty"` // 33B compressed pubkey (A_c/B_c)
	ClientVersion string                 `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hello) Reset() {
	*x = Hello{}
	mi := &file_pong_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{2}
}

func (x *Hello) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *Hello) GetCompPubkey() []byte {
	if x != nil {
		return x.CompPubkey
	}
	return nil
}

func (x *Hello) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

type NeedPreSigs struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	DraftTxHex    string                  `protobuf:"bytes,2,opt,name=draft_tx_hex,json=draftTxHex,proto3" json:"draft_tx_hex,omitempty"`
	Inputs        []*NeedPreSigs_PerInput `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NeedPreSigs) Reset() {
	*x = NeedPreSigs{}
	mi := &file_pong_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NeedPreSigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeedPreSigs) ProtoMessage() {}

func (x *NeedPreSigs) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeedPreSigs.ProtoReflect.Descriptor instead.
func (*NeedPreSigs) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{3}
}

func (x *NeedPreSigs) GetDraftTxHex() string {
	if x != nil {
		return x.DraftTxHex
	}
	return ""
}

func (x *NeedPreSigs) GetInputs() []*NeedPreSigs_PerInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

// Client VERIFY_OK message: verifies draft, builds presigs, and includes ack digest.
type VerifyOk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AckDigest     []byte                 `protobuf:"bytes,1,opt,name=ack_digest,json=ackDigest,proto3" json:"ack_digest,omitempty"` // 32B BLAKE256(draft_tx_hex || canonical(inputs))
	Presigs       []*PreSig              `protobuf:"bytes,2,rep,name=presigs,proto3" json:"presigs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyOk) Reset() {
	*x = VerifyOk{}
	mi := &file_pong_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOk) ProtoMessage() {}

func (x *VerifyOk) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOk.ProtoReflect.Descriptor instead.
func (*VerifyOk) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyOk) GetAckDigest() []byte {
	if x != nil {
		return x.AckDigest
	}
	return nil
}

func (x *VerifyOk) GetPresigs() []*PreSig {
	if x != nil {
		return x.Presigs
	}
	return nil
}

// Per-input pre-signature using minus variant and normalized R'.
type PreSig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	InputId          string                 `protobuf:"bytes,1,opt,name=input_id,json=inputId,proto3" json:"input_id,omitempty"`
	RprimeCompressed []byte                 `protobuf:"bytes,2,opt,name=Rprime_compressed,json=RprimeCompressed,proto3" json:"Rprime_compressed,omitempty"` // 33B normalized (even-Y) R'
	Sprime32         []byte                 `protobuf:"bytes,3,opt,name=sprime32,proto3" json:"sprime32,omitempty"`                                         // 32B little endian mod-n scalar
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PreSig) Reset() {
	*x = PreSig{}
	mi := &file_pong_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSig) ProtoMessage() {}

func (x *PreSig) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSig.ProtoReflect.Descriptor instead.
func (*PreSig) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{5}
}

func (x *PreSig) GetInputId() string {
	if x != nil {
		return x.InputId
	}
	return ""
}

func (x *PreSig) GetRprimeCompressed() []byte {
	if x != nil {
		return x.RprimeCompressed
	}
	return nil
}

func (x *PreSig) GetSprime32() []byte {
	if x != nil {
		return x.Sprime32
	}
	return nil
}

type PreSigBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Presigs       []*PreSigBatch_Sig     `protobuf:"bytes,2,rep,name=presigs,proto3" json:"presigs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreSigBatch) Reset() {
	*x = PreSigBatch{}
	mi := &file_pong_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreSigBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSigBatch) ProtoMessage() {}

func (x *PreSigBatch) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSigBatch.ProtoReflect.Descriptor instead.
func (*PreSigBatch) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{6}
}

func (x *PreSigBatch) GetPresigs() []*PreSigBatch_Sig {
	if x != nil {
		return x.Presigs
	}
	return nil
}

type RevealGamma struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gamma32       []byte                 `protobuf:"bytes,1,opt,name=gamma32,proto3" json:"gamma32,omitempty"` // 32B
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevealGamma) Reset() {
	*x = RevealGamma{}
	mi := &file_pong_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevealGamma) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevealGamma) ProtoMessage() {}

func (x *RevealGamma) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevealGamma.ProtoReflect.Descriptor instead.
func (*RevealGamma) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{7}
}

func (x *RevealGamma) GetGamma32() []byte {
	if x != nil {
		return x.Gamma32
	}
	return nil
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          string                 `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_pong_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{8}
}

func (x *Ack) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type Info struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_pong_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{9}
}

func (x *Info) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Server SERVER_OK message: acknowledges successful verification.
type ServerOk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AckDigest     []byte                 `protobuf:"bytes,1,opt,name=ack_digest,json=ackDigest,proto3" json:"ack_digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerOk) Reset() {
	*x = ServerOk{}
	mi := &file_pong_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOk) ProtoMessage() {}

func (x *ServerOk) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOk.ProtoReflect.Descriptor instead.
func (*ServerOk) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{10}
}

func (x *ServerOk) GetAckDigest() []byte {
	if x != nil {
		return x.AckDigest
	}
	return nil
}

// === Existing API below ===
// Escrow-first RPCs
type OpenEscrowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUid      string                 `protobuf:"bytes,1,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	CompPubkey    []byte                 `protobuf:"bytes,2,opt,name=comp_pubkey,json=compPubkey,proto3" json:"comp_pubkey,omitempty"` // 33 bytes (compressed)
	BetAtoms      uint64                 `protobuf:"varint,3,opt,name=bet_atoms,json=betAtoms,proto3" json:"bet_atoms,omitempty"`
	CsvBlocks     uint32                 `protobuf:"varint,4,opt,name=csv_blocks,json=csvBlocks,proto3" json:"csv_blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenEscrowRequest) Reset() {
	*x = OpenEscrowRequest{}
	mi := &file_pong_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenEscrowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenEscrowRequest) ProtoMessage() {}

func (x *OpenEscrowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenEscrowRequest.ProtoReflect.Descriptor instead.
func (*OpenEscrowRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{11}
}

func (x *OpenEscrowRequest) GetOwnerUid() string {
	if x != nil {
		return x.OwnerUid
	}
	return ""
}

func (x *OpenEscrowRequest) GetCompPubkey() []byte {
	if x != nil {
		return x.CompPubkey
	}
	return nil
}

func (x *OpenEscrowRequest) GetBetAtoms() uint64 {
	if x != nil {
		return x.BetAtoms
	}
	return 0
}

func (x *OpenEscrowRequest) GetCsvBlocks() uint32 {
	if x != nil {
		return x.CsvBlocks
	}
	return 0
}

type OpenEscrowResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EscrowId       string                 `protobuf:"bytes,1,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"`
	DepositAddress string                 `protobuf:"bytes,2,opt,name=deposit_address,json=depositAddress,proto3" json:"deposit_address,omitempty"`
	PkScriptHex    string                 `protobuf:"bytes,3,opt,name=pk_script_hex,json=pkScriptHex,proto3" json:"pk_script_hex,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OpenEscrowResponse) Reset() {
	*x = OpenEscrowResponse{}
	mi := &file_pong_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenEscrowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenEscrowResponse) ProtoMessage() {}

func (x *OpenEscrowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenEscrowResponse.ProtoReflect.Descriptor instead.
func (*OpenEscrowResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{12}
}

func (x *OpenEscrowResponse) GetEscrowId() string {
	if x != nil {
		return x.EscrowId
	}
	return ""
}

func (x *OpenEscrowResponse) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

func (x *OpenEscrowResponse) GetPkScriptHex() string {
	if x != nil {
		return x.PkScriptHex
	}
	return ""
}

type WaitEscrowFundingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EscrowId      string                 `protobuf:"bytes,1,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitEscrowFundingRequest) Reset() {
	*x = WaitEscrowFundingRequest{}
	mi := &file_pong_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitEscrowFundingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitEscrowFundingRequest) ProtoMessage() {}

func (x *WaitEscrowFundingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitEscrowFundingRequest.ProtoReflect.Descriptor instead.
func (*WaitEscrowFundingRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{13}
}

func (x *WaitEscrowFundingRequest) GetEscrowId() string {
	if x != nil {
		return x.EscrowId
	}
	return ""
}

type WaitEscrowFundingUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Funded        bool                   `protobuf:"varint,1,opt,name=funded,proto3" json:"funded,omitempty"`
	Confirmed     bool                   `protobuf:"varint,2,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	UtxoId        string                 `protobuf:"bytes,3,opt,name=utxo_id,json=utxoId,proto3" json:"utxo_id,omitempty"` // "txid:vout"
	ValueAtoms    uint64                 `protobuf:"varint,4,opt,name=value_atoms,json=valueAtoms,proto3" json:"value_atoms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitEscrowFundingUpdate) Reset() {
	*x = WaitEscrowFundingUpdate{}
	mi := &file_pong_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitEscrowFundingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitEscrowFundingUpdate) ProtoMessage() {}

func (x *WaitEscrowFundingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitEscrowFundingUpdate.ProtoReflect.Descriptor instead.
func (*WaitEscrowFundingUpdate) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{14}
}

func (x *WaitEscrowFundingUpdate) GetFunded() bool {
	if x != nil {
		return x.Funded
	}
	return false
}

func (x *WaitEscrowFundingUpdate) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *WaitEscrowFundingUpdate) GetUtxoId() string {
	if x != nil {
		return x.UtxoId
	}
	return ""
}

func (x *WaitEscrowFundingUpdate) GetValueAtoms() uint64 {
	if x != nil {
		return x.ValueAtoms
	}
	return 0
}

type CreateMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AC            string                 `protobuf:"bytes,1,opt,name=a_c,json=aC,proto3" json:"a_c,omitempty"` // compressed pubkey hex (33B)
	BC            string                 `protobuf:"bytes,2,opt,name=b_c,json=bC,proto3" json:"b_c,omitempty"` // compressed pubkey hex (33B)
	Csv           uint32                 `protobuf:"varint,3,opt,name=csv,proto3" json:"csv,omitempty"`        // CSV delay blocks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMatchRequest) Reset() {
	*x = CreateMatchRequest{}
	mi := &file_pong_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMatchRequest) ProtoMessage() {}

func (x *CreateMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMatchRequest.ProtoReflect.Descriptor instead.
func (*CreateMatchRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{15}
}

func (x *CreateMatchRequest) GetAC() string {
	if x != nil {
		return x.AC
	}
	return ""
}

func (x *CreateMatchRequest) GetBC() string {
	if x != nil {
		return x.BC
	}
	return ""
}

func (x *CreateMatchRequest) GetCsv() uint32 {
	if x != nil {
		return x.Csv
	}
	return 0
}

type CreateMatchResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MatchId         string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	SC              string                 `protobuf:"bytes,2,opt,name=s_c,json=sC,proto3" json:"s_c,omitempty"`                                           // server compressed pubkey hex (33B)
	AA              string                 `protobuf:"bytes,3,opt,name=a_a,json=aA,proto3" json:"a_a,omitempty"`                                           // coeff a_A (32B hex)
	AB              string                 `protobuf:"bytes,4,opt,name=a_b,json=aB,proto3" json:"a_b,omitempty"`                                           // coeff a_B (32B hex)
	AS              string                 `protobuf:"bytes,5,opt,name=a_s,json=aS,proto3" json:"a_s,omitempty"`                                           // coeff a_S (32B hex)
	XA              string                 `protobuf:"bytes,6,opt,name=x_a,json=xA,proto3" json:"x_a,omitempty"`                                           // branch agg pubkey for A wins (33B hex)
	XB              string                 `protobuf:"bytes,7,opt,name=x_b,json=xB,proto3" json:"x_b,omitempty"`                                           // branch agg pubkey for B wins (33B hex)
	Csv             uint32                 `protobuf:"varint,8,opt,name=csv,proto3" json:"csv,omitempty"`                                                  // echoed
	EscrowTemplateA string                 `protobuf:"bytes,9,opt,name=escrow_template_a,json=escrowTemplateA,proto3" json:"escrow_template_a,omitempty"`  // redeemScript hex template (may contain placeholders)
	EscrowTemplateB string                 `protobuf:"bytes,10,opt,name=escrow_template_b,json=escrowTemplateB,proto3" json:"escrow_template_b,omitempty"` // redeemScript hex template (may contain placeholders)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateMatchResponse) Reset() {
	*x = CreateMatchResponse{}
	mi := &file_pong_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMatchResponse) ProtoMessage() {}

func (x *CreateMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMatchResponse.ProtoReflect.Descriptor instead.
func (*CreateMatchResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{16}
}

func (x *CreateMatchResponse) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *CreateMatchResponse) GetSC() string {
	if x != nil {
		return x.SC
	}
	return ""
}

func (x *CreateMatchResponse) GetAA() string {
	if x != nil {
		return x.AA
	}
	return ""
}

func (x *CreateMatchResponse) GetAB() string {
	if x != nil {
		return x.AB
	}
	return ""
}

func (x *CreateMatchResponse) GetAS() string {
	if x != nil {
		return x.AS
	}
	return ""
}

func (x *CreateMatchResponse) GetXA() string {
	if x != nil {
		return x.XA
	}
	return ""
}

func (x *CreateMatchResponse) GetXB() string {
	if x != nil {
		return x.XB
	}
	return ""
}

func (x *CreateMatchResponse) GetCsv() uint32 {
	if x != nil {
		return x.Csv
	}
	return 0
}

func (x *CreateMatchResponse) GetEscrowTemplateA() string {
	if x != nil {
		return x.EscrowTemplateA
	}
	return ""
}

func (x *CreateMatchResponse) GetEscrowTemplateB() string {
	if x != nil {
		return x.EscrowTemplateB
	}
	return ""
}

type EscrowUTXO struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Txid            string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout            uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Value           uint64                 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"` // atoms
	RedeemScriptHex string                 `protobuf:"bytes,4,opt,name=redeem_script_hex,json=redeemScriptHex,proto3" json:"redeem_script_hex,omitempty"`
	PkScriptHex     string                 `protobuf:"bytes,5,opt,name=pk_script_hex,json=pkScriptHex,proto3" json:"pk_script_hex,omitempty"`
	Owner           string                 `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"` // "A" or "B"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EscrowUTXO) Reset() {
	*x = EscrowUTXO{}
	mi := &file_pong_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EscrowUTXO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscrowUTXO) ProtoMessage() {}

func (x *EscrowUTXO) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscrowUTXO.ProtoReflect.Descriptor instead.
func (*EscrowUTXO) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{17}
}

func (x *EscrowUTXO) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *EscrowUTXO) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *EscrowUTXO) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *EscrowUTXO) GetRedeemScriptHex() string {
	if x != nil {
		return x.RedeemScriptHex
	}
	return ""
}

func (x *EscrowUTXO) GetPkScriptHex() string {
	if x != nil {
		return x.PkScriptHex
	}
	return ""
}

func (x *EscrowUTXO) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type WaitFundingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EscrowId      string                 `protobuf:"bytes,1,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitFundingRequest) Reset() {
	*x = WaitFundingRequest{}
	mi := &file_pong_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitFundingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitFundingRequest) ProtoMessage() {}

func (x *WaitFundingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitFundingRequest.ProtoReflect.Descriptor instead.
func (*WaitFundingRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{18}
}

func (x *WaitFundingRequest) GetEscrowId() string {
	if x != nil {
		return x.EscrowId
	}
	return ""
}

type WaitFundingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confs         uint32                 `protobuf:"varint,1,opt,name=confs,proto3" json:"confs,omitempty"`
	Value         uint64                 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Utxo          *EscrowUTXO            `protobuf:"bytes,3,opt,name=utxo,proto3" json:"utxo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitFundingResponse) Reset() {
	*x = WaitFundingResponse{}
	mi := &file_pong_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitFundingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitFundingResponse) ProtoMessage() {}

func (x *WaitFundingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitFundingResponse.ProtoReflect.Descriptor instead.
func (*WaitFundingResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{19}
}

func (x *WaitFundingResponse) GetConfs() uint32 {
	if x != nil {
		return x.Confs
	}
	return 0
}

func (x *WaitFundingResponse) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *WaitFundingResponse) GetUtxo() *EscrowUTXO {
	if x != nil {
		return x.Utxo
	}
	return nil
}

type MatchAllocatedNtfn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	BetAtoms      uint64                 `protobuf:"varint,3,opt,name=bet_atoms,json=betAtoms,proto3" json:"bet_atoms,omitempty"`
	CsvBlocks     uint32                 `protobuf:"varint,4,opt,name=csv_blocks,json=csvBlocks,proto3" json:"csv_blocks,omitempty"`
	AComp         []byte                 `protobuf:"bytes,5,opt,name=a_comp,json=aComp,proto3" json:"a_comp,omitempty"` // optional debug
	BComp         []byte                 `protobuf:"bytes,6,opt,name=b_comp,json=bComp,proto3" json:"b_comp,omitempty"` // optional debug
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchAllocatedNtfn) Reset() {
	*x = MatchAllocatedNtfn{}
	mi := &file_pong_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchAllocatedNtfn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAllocatedNtfn) ProtoMessage() {}

func (x *MatchAllocatedNtfn) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAllocatedNtfn.ProtoReflect.Descriptor instead.
func (*MatchAllocatedNtfn) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{20}
}

func (x *MatchAllocatedNtfn) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchAllocatedNtfn) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *MatchAllocatedNtfn) GetBetAtoms() uint64 {
	if x != nil {
		return x.BetAtoms
	}
	return 0
}

func (x *MatchAllocatedNtfn) GetCsvBlocks() uint32 {
	if x != nil {
		return x.CsvBlocks
	}
	return 0
}

func (x *MatchAllocatedNtfn) GetAComp() []byte {
	if x != nil {
		return x.AComp
	}
	return nil
}

func (x *MatchAllocatedNtfn) GetBComp() []byte {
	if x != nil {
		return x.BComp
	}
	return nil
}

type UnreadyGameStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnreadyGameStreamRequest) Reset() {
	*x = UnreadyGameStreamRequest{}
	mi := &file_pong_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnreadyGameStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadyGameStreamRequest) ProtoMessage() {}

func (x *UnreadyGameStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadyGameStreamRequest.ProtoReflect.Descriptor instead.
func (*UnreadyGameStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{21}
}

func (x *UnreadyGameStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type UnreadyGameStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnreadyGameStreamResponse) Reset() {
	*x = UnreadyGameStreamResponse{}
	mi := &file_pong_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnreadyGameStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreadyGameStreamResponse) ProtoMessage() {}

func (x *UnreadyGameStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreadyGameStreamResponse.ProtoReflect.Descriptor instead.
func (*UnreadyGameStreamResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{22}
}

type StartNtfnStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartNtfnStreamRequest) Reset() {
	*x = StartNtfnStreamRequest{}
	mi := &file_pong_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartNtfnStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartNtfnStreamRequest) ProtoMessage() {}

func (x *StartNtfnStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartNtfnStreamRequest.ProtoReflect.Descriptor instead.
func (*StartNtfnStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{23}
}

func (x *StartNtfnStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type NtfnStreamResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NotificationType NotificationType       `protobuf:"varint,1,opt,name=notification_type,json=notificationType,proto3,enum=pong.NotificationType" json:"notification_type,omitempty"` // Type of the notification
	Started          bool                   `protobuf:"varint,2,opt,name=started,proto3" json:"started,omitempty"`
	GameId           string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Message          string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"` // message or additional details
	BetAmt           int64                  `protobuf:"varint,5,opt,name=betAmt,proto3" json:"betAmt,omitempty"`
	PlayerNumber     int32                  `protobuf:"varint,6,opt,name=player_number,json=playerNumber,proto3" json:"player_number,omitempty"` // Player 1 or Player 2
	PlayerId         string                 `protobuf:"bytes,7,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId           string                 `protobuf:"bytes,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Wr               *WaitingRoom           `protobuf:"bytes,9,opt,name=wr,proto3" json:"wr,omitempty"`
	Ready            bool                   `protobuf:"varint,10,opt,name=ready,proto3" json:"ready,omitempty"`
	MatchAlloc       *MatchAllocatedNtfn    `protobuf:"bytes,11,opt,name=match_alloc,json=matchAlloc,proto3" json:"match_alloc,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NtfnStreamResponse) Reset() {
	*x = NtfnStreamResponse{}
	mi := &file_pong_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NtfnStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NtfnStreamResponse) ProtoMessage() {}

func (x *NtfnStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NtfnStreamResponse.ProtoReflect.Descriptor instead.
func (*NtfnStreamResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{24}
}

func (x *NtfnStreamResponse) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_UNKNOWN
}

func (x *NtfnStreamResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

func (x *NtfnStreamResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *NtfnStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NtfnStreamResponse) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

func (x *NtfnStreamResponse) GetPlayerNumber() int32 {
	if x != nil {
		return x.PlayerNumber
	}
	return 0
}

func (x *NtfnStreamResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *NtfnStreamResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *NtfnStreamResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

func (x *NtfnStreamResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *NtfnStreamResponse) GetMatchAlloc() *MatchAllocatedNtfn {
	if x != nil {
		return x.MatchAlloc
	}
	return nil
}

// Waiting Room Messages
type WaitingRoomsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomsRequest) Reset() {
	*x = WaitingRoomsRequest{}
	mi := &file_pong_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomsRequest) ProtoMessage() {}

func (x *WaitingRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomsRequest.ProtoReflect.Descriptor instead.
func (*WaitingRoomsRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{25}
}

func (x *WaitingRoomsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type WaitingRoomsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wr            []*WaitingRoom         `protobuf:"bytes,1,rep,name=wr,proto3" json:"wr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomsResponse) Reset() {
	*x = WaitingRoomsResponse{}
	mi := &file_pong_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomsResponse) ProtoMessage() {}

func (x *WaitingRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomsResponse.ProtoReflect.Descriptor instead.
func (*WaitingRoomsResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{26}
}

func (x *WaitingRoomsResponse) GetWr() []*WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type JoinWaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	EscrowId      string                 `protobuf:"bytes,3,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinWaitingRoomRequest) Reset() {
	*x = JoinWaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinWaitingRoomRequest) ProtoMessage() {}

func (x *JoinWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{27}
}

func (x *JoinWaitingRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinWaitingRoomRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *JoinWaitingRoomRequest) GetEscrowId() string {
	if x != nil {
		return x.EscrowId
	}
	return ""
}

type JoinWaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wr            *WaitingRoom           `protobuf:"bytes,1,opt,name=wr,proto3" json:"wr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinWaitingRoomResponse) Reset() {
	*x = JoinWaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinWaitingRoomResponse) ProtoMessage() {}

func (x *JoinWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{28}
}

func (x *JoinWaitingRoomResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type CreateWaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	BetAmt        int64                  `protobuf:"varint,2,opt,name=betAmt,proto3" json:"betAmt,omitempty"`
	EscrowId      string                 `protobuf:"bytes,3,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"` // optional; server may auto-pick if empty
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaitingRoomRequest) Reset() {
	*x = CreateWaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingRoomRequest) ProtoMessage() {}

func (x *CreateWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{29}
}

func (x *CreateWaitingRoomRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *CreateWaitingRoomRequest) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

func (x *CreateWaitingRoomRequest) GetEscrowId() string {
	if x != nil {
		return x.EscrowId
	}
	return ""
}

type CreateWaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wr            *WaitingRoom           `protobuf:"bytes,1,opt,name=wr,proto3" json:"wr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaitingRoomResponse) Reset() {
	*x = CreateWaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingRoomResponse) ProtoMessage() {}

func (x *CreateWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{30}
}

func (x *CreateWaitingRoomResponse) GetWr() *WaitingRoom {
	if x != nil {
		return x.Wr
	}
	return nil
}

type WaitingRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HostId        string                 `protobuf:"bytes,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Players       []*Player              `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	BetAmt        int64                  `protobuf:"varint,4,opt,name=bet_amt,json=betAmt,proto3" json:"bet_amt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoom) Reset() {
	*x = WaitingRoom{}
	mi := &file_pong_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoom) ProtoMessage() {}

func (x *WaitingRoom) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoom.ProtoReflect.Descriptor instead.
func (*WaitingRoom) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{31}
}

func (x *WaitingRoom) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WaitingRoom) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *WaitingRoom) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *WaitingRoom) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

type WaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomRequest) Reset() {
	*x = WaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomRequest) ProtoMessage() {}

func (x *WaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*WaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{32}
}

type WaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Players       []*Player              `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitingRoomResponse) Reset() {
	*x = WaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomResponse) ProtoMessage() {}

func (x *WaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*WaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{33}
}

func (x *WaitingRoomResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

// Game Messages
type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nick          string                 `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"`
	BetAmt        int64                  `protobuf:"varint,3,opt,name=bet_amt,json=betAmt,proto3" json:"bet_amt,omitempty"`
	Number        int32                  `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	Score         int32                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	Ready         bool                   `protobuf:"varint,6,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_pong_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{34}
}

func (x *Player) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Player) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Player) GetBetAmt() int64 {
	if x != nil {
		return x.BetAmt
	}
	return 0
}

func (x *Player) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Player) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Player) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// SignalReadyRequest contains information about the client signaling readiness
type StartGameStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameStreamRequest) Reset() {
	*x = StartGameStreamRequest{}
	mi := &file_pong_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameStreamRequest) ProtoMessage() {}

func (x *StartGameStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameStreamRequest.ProtoReflect.Descriptor instead.
func (*StartGameStreamRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{35}
}

func (x *StartGameStreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GameUpdateBytes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUpdateBytes) Reset() {
	*x = GameUpdateBytes{}
	mi := &file_pong_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUpdateBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUpdateBytes) ProtoMessage() {}

func (x *GameUpdateBytes) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUpdateBytes.ProtoReflect.Descriptor instead.
func (*GameUpdateBytes) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{36}
}

func (x *GameUpdateBytes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PlayerInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Input         string                 `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`                                    // e.g., "ArrowUp", "ArrowDown"
	PlayerNumber  int32                  `protobuf:"varint,3,opt,name=player_number,json=playerNumber,proto3" json:"player_number,omitempty"` // player 1 or player 2.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	mi := &file_pong_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{37}
}

func (x *PlayerInput) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerInput) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *PlayerInput) GetPlayerNumber() int32 {
	if x != nil {
		return x.PlayerNumber
	}
	return 0
}

type GameUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameWidth     float64                `protobuf:"fixed64,13,opt,name=gameWidth,proto3" json:"gameWidth,omitempty"`
	GameHeight    float64                `protobuf:"fixed64,14,opt,name=gameHeight,proto3" json:"gameHeight,omitempty"`
	P1Width       float64                `protobuf:"fixed64,15,opt,name=p1Width,proto3" json:"p1Width,omitempty"`
	P1Height      float64                `protobuf:"fixed64,16,opt,name=p1Height,proto3" json:"p1Height,omitempty"`
	P2Width       float64                `protobuf:"fixed64,17,opt,name=p2Width,proto3" json:"p2Width,omitempty"`
	P2Height      float64                `protobuf:"fixed64,18,opt,name=p2Height,proto3" json:"p2Height,omitempty"`
	BallWidth     float64                `protobuf:"fixed64,19,opt,name=ballWidth,proto3" json:"ballWidth,omitempty"`
	BallHeight    float64                `protobuf:"fixed64,20,opt,name=ballHeight,proto3" json:"ballHeight,omitempty"`
	P1Score       int32                  `protobuf:"varint,21,opt,name=p1Score,proto3" json:"p1Score,omitempty"`
	P2Score       int32                  `protobuf:"varint,22,opt,name=p2Score,proto3" json:"p2Score,omitempty"`
	BallX         float64                `protobuf:"fixed64,1,opt,name=ballX,proto3" json:"ballX,omitempty"`
	BallY         float64                `protobuf:"fixed64,2,opt,name=ballY,proto3" json:"ballY,omitempty"`
	P1X           float64                `protobuf:"fixed64,3,opt,name=p1X,proto3" json:"p1X,omitempty"`
	P1Y           float64                `protobuf:"fixed64,4,opt,name=p1Y,proto3" json:"p1Y,omitempty"`
	P2X           float64                `protobuf:"fixed64,5,opt,name=p2X,proto3" json:"p2X,omitempty"`
	P2Y           float64                `protobuf:"fixed64,6,opt,name=p2Y,proto3" json:"p2Y,omitempty"`
	P1YVelocity   float64                `protobuf:"fixed64,7,opt,name=p1YVelocity,proto3" json:"p1YVelocity,omitempty"`
	P2YVelocity   float64                `protobuf:"fixed64,8,opt,name=p2YVelocity,proto3" json:"p2YVelocity,omitempty"`
	BallXVelocity float64                `protobuf:"fixed64,9,opt,name=ballXVelocity,proto3" json:"ballXVelocity,omitempty"`
	BallYVelocity float64                `protobuf:"fixed64,10,opt,name=ballYVelocity,proto3" json:"ballYVelocity,omitempty"`
	Fps           float64                `protobuf:"fixed64,11,opt,name=fps,proto3" json:"fps,omitempty"`
	Tps           float64                `protobuf:"fixed64,12,opt,name=tps,proto3" json:"tps,omitempty"`
	// Optional: if you want to send error messages or debug information
	Error         string `protobuf:"bytes,23,opt,name=error,proto3" json:"error,omitempty"`
	Debug         bool   `protobuf:"varint,24,opt,name=debug,proto3" json:"debug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUpdate) Reset() {
	*x = GameUpdate{}
	mi := &file_pong_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUpdate) ProtoMessage() {}

func (x *GameUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUpdate.ProtoReflect.Descriptor instead.
func (*GameUpdate) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{38}
}

func (x *GameUpdate) GetGameWidth() float64 {
	if x != nil {
		return x.GameWidth
	}
	return 0
}

func (x *GameUpdate) GetGameHeight() float64 {
	if x != nil {
		return x.GameHeight
	}
	return 0
}

func (x *GameUpdate) GetP1Width() float64 {
	if x != nil {
		return x.P1Width
	}
	return 0
}

func (x *GameUpdate) GetP1Height() float64 {
	if x != nil {
		return x.P1Height
	}
	return 0
}

func (x *GameUpdate) GetP2Width() float64 {
	if x != nil {
		return x.P2Width
	}
	return 0
}

func (x *GameUpdate) GetP2Height() float64 {
	if x != nil {
		return x.P2Height
	}
	return 0
}

func (x *GameUpdate) GetBallWidth() float64 {
	if x != nil {
		return x.BallWidth
	}
	return 0
}

func (x *GameUpdate) GetBallHeight() float64 {
	if x != nil {
		return x.BallHeight
	}
	return 0
}

func (x *GameUpdate) GetP1Score() int32 {
	if x != nil {
		return x.P1Score
	}
	return 0
}

func (x *GameUpdate) GetP2Score() int32 {
	if x != nil {
		return x.P2Score
	}
	return 0
}

func (x *GameUpdate) GetBallX() float64 {
	if x != nil {
		return x.BallX
	}
	return 0
}

func (x *GameUpdate) GetBallY() float64 {
	if x != nil {
		return x.BallY
	}
	return 0
}

func (x *GameUpdate) GetP1X() float64 {
	if x != nil {
		return x.P1X
	}
	return 0
}

func (x *GameUpdate) GetP1Y() float64 {
	if x != nil {
		return x.P1Y
	}
	return 0
}

func (x *GameUpdate) GetP2X() float64 {
	if x != nil {
		return x.P2X
	}
	return 0
}

func (x *GameUpdate) GetP2Y() float64 {
	if x != nil {
		return x.P2Y
	}
	return 0
}

func (x *GameUpdate) GetP1YVelocity() float64 {
	if x != nil {
		return x.P1YVelocity
	}
	return 0
}

func (x *GameUpdate) GetP2YVelocity() float64 {
	if x != nil {
		return x.P2YVelocity
	}
	return 0
}

func (x *GameUpdate) GetBallXVelocity() float64 {
	if x != nil {
		return x.BallXVelocity
	}
	return 0
}

func (x *GameUpdate) GetBallYVelocity() float64 {
	if x != nil {
		return x.BallYVelocity
	}
	return 0
}

func (x *GameUpdate) GetFps() float64 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *GameUpdate) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *GameUpdate) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GameUpdate) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type LeaveWaitingRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveWaitingRoomRequest) Reset() {
	*x = LeaveWaitingRoomRequest{}
	mi := &file_pong_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveWaitingRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWaitingRoomRequest) ProtoMessage() {}

func (x *LeaveWaitingRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWaitingRoomRequest.ProtoReflect.Descriptor instead.
func (*LeaveWaitingRoomRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{39}
}

func (x *LeaveWaitingRoomRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LeaveWaitingRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type LeaveWaitingRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveWaitingRoomResponse) Reset() {
	*x = LeaveWaitingRoomResponse{}
	mi := &file_pong_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveWaitingRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWaitingRoomResponse) ProtoMessage() {}

func (x *LeaveWaitingRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWaitingRoomResponse.ProtoReflect.Descriptor instead.
func (*LeaveWaitingRoomResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{40}
}

func (x *LeaveWaitingRoomResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveWaitingRoomResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SignalReadyToPlayRequest contains information about the client signaling readiness
type SignalReadyToPlayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalReadyToPlayRequest) Reset() {
	*x = SignalReadyToPlayRequest{}
	mi := &file_pong_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalReadyToPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReadyToPlayRequest) ProtoMessage() {}

func (x *SignalReadyToPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReadyToPlayRequest.ProtoReflect.Descriptor instead.
func (*SignalReadyToPlayRequest) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{41}
}

func (x *SignalReadyToPlayRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SignalReadyToPlayRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

// SignalReadyToPlayResponse contains the result of the ready signal
type SignalReadyToPlayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalReadyToPlayResponse) Reset() {
	*x = SignalReadyToPlayResponse{}
	mi := &file_pong_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalReadyToPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReadyToPlayResponse) ProtoMessage() {}

func (x *SignalReadyToPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReadyToPlayResponse.ProtoReflect.Descriptor instead.
func (*SignalReadyToPlayResponse) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{42}
}

func (x *SignalReadyToPlayResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SignalReadyToPlayResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type NeedPreSigs_PerInput struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InputId         string                 `protobuf:"bytes,1,opt,name=input_id,json=inputId,proto3" json:"input_id,omitempty"`
	RedeemScriptHex string                 `protobuf:"bytes,2,opt,name=redeem_script_hex,json=redeemScriptHex,proto3" json:"redeem_script_hex,omitempty"`
	MHex            string                 `protobuf:"bytes,3,opt,name=m_hex,json=mHex,proto3" json:"m_hex,omitempty"`
	TCompressed     []byte                 `protobuf:"bytes,4,opt,name=T_compressed,json=TCompressed,proto3" json:"T_compressed,omitempty"` // 33B
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NeedPreSigs_PerInput) Reset() {
	*x = NeedPreSigs_PerInput{}
	mi := &file_pong_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NeedPreSigs_PerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeedPreSigs_PerInput) ProtoMessage() {}

func (x *NeedPreSigs_PerInput) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeedPreSigs_PerInput.ProtoReflect.Descriptor instead.
func (*NeedPreSigs_PerInput) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{3, 0}
}

func (x *NeedPreSigs_PerInput) GetInputId() string {
	if x != nil {
		return x.InputId
	}
	return ""
}

func (x *NeedPreSigs_PerInput) GetRedeemScriptHex() string {
	if x != nil {
		return x.RedeemScriptHex
	}
	return ""
}

func (x *NeedPreSigs_PerInput) GetMHex() string {
	if x != nil {
		return x.MHex
	}
	return ""
}

func (x *NeedPreSigs_PerInput) GetTCompressed() []byte {
	if x != nil {
		return x.TCompressed
	}
	return nil
}

type PreSigBatch_Sig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InputId       string                 `protobuf:"bytes,1,opt,name=input_id,json=inputId,proto3" json:"input_id,omitempty"`
	Rprime32      []byte                 `protobuf:"bytes,2,opt,name=rprime32,proto3" json:"rprime32,omitempty"` // 32B (Deprecated; use PreSig with full R')
	Sprime32      []byte                 `protobuf:"bytes,3,opt,name=sprime32,proto3" json:"sprime32,omitempty"` // 32B (Deprecated; use PreSig)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreSigBatch_Sig) Reset() {
	*x = PreSigBatch_Sig{}
	mi := &file_pong_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreSigBatch_Sig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSigBatch_Sig) ProtoMessage() {}

func (x *PreSigBatch_Sig) ProtoReflect() protoreflect.Message {
	mi := &file_pong_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSigBatch_Sig.ProtoReflect.Descriptor instead.
func (*PreSigBatch_Sig) Descriptor() ([]byte, []int) {
	return file_pong_proto_rawDescGZIP(), []int{6, 0}
}

func (x *PreSigBatch_Sig) GetInputId() string {
	if x != nil {
		return x.InputId
	}
	return ""
}

func (x *PreSigBatch_Sig) GetRprime32() []byte {
	if x != nil {
		return x.Rprime32
	}
	return nil
}

func (x *PreSigBatch_Sig) GetSprime32() []byte {
	if x != nil {
		return x.Sprime32
	}
	return nil
}

var File_pong_proto protoreflect.FileDescriptor

const file_pong_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"pong.proto\x12\x04pong\"\xd0\x01\n" +
	"\tClientMsg\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12#\n" +
	"\x05hello\x18\n" +
	" \x01(\v2\v.pong.HelloH\x00R\x05hello\x12-\n" +
	"\apresigs\x18\v \x01(\v2\x11.pong.PreSigBatchH\x00R\apresigs\x12\x1d\n" +
	"\x03ack\x18\f \x01(\v2\t.pong.AckH\x00R\x03ack\x12-\n" +
	"\tverify_ok\x18\r \x01(\v2\x0e.pong.VerifyOkH\x00R\bverifyOkB\x06\n" +
	"\x04kind\"\xc6\x01\n" +
	"\tServerMsg\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12%\n" +
	"\x03req\x18\v \x01(\v2\x11.pong.NeedPreSigsH\x00R\x03req\x12+\n" +
	"\x06reveal\x18\f \x01(\v2\x11.pong.RevealGammaH\x00R\x06reveal\x12 \n" +
	"\x04info\x18\r \x01(\v2\n" +
	".pong.InfoH\x00R\x04info\x12 \n" +
	"\x02ok\x18\x0e \x01(\v2\x0e.pong.ServerOkH\x00R\x02okB\x06\n" +
	"\x04kind\"j\n" +
	"\x05Hello\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x1f\n" +
	"\vcomp_pubkey\x18\x02 \x01(\fR\n" +
	"compPubkey\x12%\n" +
	"\x0eclient_version\x18\x03 \x01(\tR\rclientVersion\"\xef\x01\n" +
	"\vNeedPreSigs\x12 \n" +
	"\fdraft_tx_hex\x18\x02 \x01(\tR\n" +
	"draftTxHex\x122\n" +
	"\x06inputs\x18\x04 \x03(\v2\x1a.pong.NeedPreSigs.PerInputR\x06inputs\x1a\x89\x01\n" +
	"\bPerInput\x12\x19\n" +
	"\binput_id\x18\x01 \x01(\tR\ainputId\x12*\n" +
	"\x11redeem_script_hex\x18\x02 \x01(\tR\x0fredeemScriptHex\x12\x13\n" +
	"\x05m_hex\x18\x03 \x01(\tR\x04mHex\x12!\n" +
	"\fT_compressed\x18\x04 \x01(\fR\vTCompressed\"Q\n" +
	"\bVerifyOk\x12\x1d\n" +
	"\n" +
	"ack_digest\x18\x01 \x01(\fR\tackDigest\x12&\n" +
	"\apresigs\x18\x02 \x03(\v2\f.pong.PreSigR\apresigs\"l\n" +
	"\x06PreSig\x12\x19\n" +
	"\binput_id\x18\x01 \x01(\tR\ainputId\x12+\n" +
	"\x11Rprime_compressed\x18\x02 \x01(\fR\x10RprimeCompressed\x12\x1a\n" +
	"\bsprime32\x18\x03 \x01(\fR\bsprime32\"\x98\x01\n" +
	"\vPreSigBatch\x12/\n" +
	"\apresigs\x18\x02 \x03(\v2\x15.pong.PreSigBatch.SigR\apresigs\x1aX\n" +
	"\x03Sig\x12\x19\n" +
	"\binput_id\x18\x01 \x01(\tR\ainputId\x12\x1a\n" +
	"\brprime32\x18\x02 \x01(\fR\brprime32\x12\x1a\n" +
	"\bsprime32\x18\x03 \x01(\fR\bsprime32\"'\n" +
	"\vRevealGamma\x12\x18\n" +
	"\agamma32\x18\x01 \x01(\fR\agamma32\"\x19\n" +
	"\x03Ack\x12\x12\n" +
	"\x04note\x18\x01 \x01(\tR\x04note\"\x1a\n" +
	"\x04Info\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\")\n" +
	"\bServerOk\x12\x1d\n" +
	"\n" +
	"ack_digest\x18\x01 \x01(\fR\tackDigest\"\x8d\x01\n" +
	"\x11OpenEscrowRequest\x12\x1b\n" +
	"\towner_uid\x18\x01 \x01(\tR\bownerUid\x12\x1f\n" +
	"\vcomp_pubkey\x18\x02 \x01(\fR\n" +
	"compPubkey\x12\x1b\n" +
	"\tbet_atoms\x18\x03 \x01(\x04R\bbetAtoms\x12\x1d\n" +
	"\n" +
	"csv_blocks\x18\x04 \x01(\rR\tcsvBlocks\"~\n" +
	"\x12OpenEscrowResponse\x12\x1b\n" +
	"\tescrow_id\x18\x01 \x01(\tR\bescrowId\x12'\n" +
	"\x0fdeposit_address\x18\x02 \x01(\tR\x0edepositAddress\x12\"\n" +
	"\rpk_script_hex\x18\x03 \x01(\tR\vpkScriptHex\"7\n" +
	"\x18WaitEscrowFundingRequest\x12\x1b\n" +
	"\tescrow_id\x18\x01 \x01(\tR\bescrowId\"\x89\x01\n" +
	"\x17WaitEscrowFundingUpdate\x12\x16\n" +
	"\x06funded\x18\x01 \x01(\bR\x06funded\x12\x1c\n" +
	"\tconfirmed\x18\x02 \x01(\bR\tconfirmed\x12\x17\n" +
	"\autxo_id\x18\x03 \x01(\tR\x06utxoId\x12\x1f\n" +
	"\vvalue_atoms\x18\x04 \x01(\x04R\n" +
	"valueAtoms\"H\n" +
	"\x12CreateMatchRequest\x12\x0f\n" +
	"\x03a_c\x18\x01 \x01(\tR\x02aC\x12\x0f\n" +
	"\x03b_c\x18\x02 \x01(\tR\x02bC\x12\x10\n" +
	"\x03csv\x18\x03 \x01(\rR\x03csv\"\x80\x02\n" +
	"\x13CreateMatchResponse\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x0f\n" +
	"\x03s_c\x18\x02 \x01(\tR\x02sC\x12\x0f\n" +
	"\x03a_a\x18\x03 \x01(\tR\x02aA\x12\x0f\n" +
	"\x03a_b\x18\x04 \x01(\tR\x02aB\x12\x0f\n" +
	"\x03a_s\x18\x05 \x01(\tR\x02aS\x12\x0f\n" +
	"\x03x_a\x18\x06 \x01(\tR\x02xA\x12\x0f\n" +
	"\x03x_b\x18\a \x01(\tR\x02xB\x12\x10\n" +
	"\x03csv\x18\b \x01(\rR\x03csv\x12*\n" +
	"\x11escrow_template_a\x18\t \x01(\tR\x0fescrowTemplateA\x12*\n" +
	"\x11escrow_template_b\x18\n" +
	" \x01(\tR\x0fescrowTemplateB\"\xb0\x01\n" +
	"\n" +
	"EscrowUTXO\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x04R\x05value\x12*\n" +
	"\x11redeem_script_hex\x18\x04 \x01(\tR\x0fredeemScriptHex\x12\"\n" +
	"\rpk_script_hex\x18\x05 \x01(\tR\vpkScriptHex\x12\x14\n" +
	"\x05owner\x18\x06 \x01(\tR\x05owner\"1\n" +
	"\x12WaitFundingRequest\x12\x1b\n" +
	"\tescrow_id\x18\x01 \x01(\tR\bescrowId\"g\n" +
	"\x13WaitFundingResponse\x12\x14\n" +
	"\x05confs\x18\x01 \x01(\rR\x05confs\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value\x12$\n" +
	"\x04utxo\x18\x03 \x01(\v2\x10.pong.EscrowUTXOR\x04utxo\"\xb2\x01\n" +
	"\x12MatchAllocatedNtfn\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tbet_atoms\x18\x03 \x01(\x04R\bbetAtoms\x12\x1d\n" +
	"\n" +
	"csv_blocks\x18\x04 \x01(\rR\tcsvBlocks\x12\x15\n" +
	"\x06a_comp\x18\x05 \x01(\fR\x05aComp\x12\x15\n" +
	"\x06b_comp\x18\x06 \x01(\fR\x05bComp\"7\n" +
	"\x18UnreadyGameStreamRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\x1b\n" +
	"\x19UnreadyGameStreamResponse\"5\n" +
	"\x16StartNtfnStreamRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\x8d\x03\n" +
	"\x12NtfnStreamResponse\x12C\n" +
	"\x11notification_type\x18\x01 \x01(\x0e2\x16.pong.NotificationTypeR\x10notificationType\x12\x18\n" +
	"\astarted\x18\x02 \x01(\bR\astarted\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\tR\x06gameId\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x16\n" +
	"\x06betAmt\x18\x05 \x01(\x03R\x06betAmt\x12#\n" +
	"\rplayer_number\x18\x06 \x01(\x05R\fplayerNumber\x12\x1b\n" +
	"\tplayer_id\x18\a \x01(\tR\bplayerId\x12\x17\n" +
	"\aroom_id\x18\b \x01(\tR\x06roomId\x12!\n" +
	"\x02wr\x18\t \x01(\v2\x11.pong.WaitingRoomR\x02wr\x12\x14\n" +
	"\x05ready\x18\n" +
	" \x01(\bR\x05ready\x129\n" +
	"\vmatch_alloc\x18\v \x01(\v2\x18.pong.MatchAllocatedNtfnR\n" +
	"matchAlloc\".\n" +
	"\x13WaitingRoomsRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\"9\n" +
	"\x14WaitingRoomsResponse\x12!\n" +
	"\x02wr\x18\x01 \x03(\v2\x11.pong.WaitingRoomR\x02wr\"k\n" +
	"\x16JoinWaitingRoomRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12\x1b\n" +
	"\tescrow_id\x18\x03 \x01(\tR\bescrowId\"<\n" +
	"\x17JoinWaitingRoomResponse\x12!\n" +
	"\x02wr\x18\x01 \x01(\v2\x11.pong.WaitingRoomR\x02wr\"h\n" +
	"\x18CreateWaitingRoomRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x16\n" +
	"\x06betAmt\x18\x02 \x01(\x03R\x06betAmt\x12\x1b\n" +
	"\tescrow_id\x18\x03 \x01(\tR\bescrowId\">\n" +
	"\x19CreateWaitingRoomResponse\x12!\n" +
	"\x02wr\x18\x01 \x01(\v2\x11.pong.WaitingRoomR\x02wr\"w\n" +
	"\vWaitingRoom\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\ahost_id\x18\x02 \x01(\tR\x06hostId\x12&\n" +
	"\aplayers\x18\x03 \x03(\v2\f.pong.PlayerR\aplayers\x12\x17\n" +
	"\abet_amt\x18\x04 \x01(\x03R\x06betAmt\"\x14\n" +
	"\x12WaitingRoomRequest\"=\n" +
	"\x13WaitingRoomResponse\x12&\n" +
	"\aplayers\x18\x01 \x03(\v2\f.pong.PlayerR\aplayers\"\x8b\x01\n" +
	"\x06Player\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x12\n" +
	"\x04nick\x18\x02 \x01(\tR\x04nick\x12\x17\n" +
	"\abet_amt\x18\x03 \x01(\x03R\x06betAmt\x12\x16\n" +
	"\x06number\x18\x04 \x01(\x05R\x06number\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x05R\x05score\x12\x14\n" +
	"\x05ready\x18\x06 \x01(\bR\x05ready\"5\n" +
	"\x16StartGameStreamRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"%\n" +
	"\x0fGameUpdateBytes\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"e\n" +
	"\vPlayerInput\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x14\n" +
	"\x05input\x18\x02 \x01(\tR\x05input\x12#\n" +
	"\rplayer_number\x18\x03 \x01(\x05R\fplayerNumber\"\xfc\x04\n" +
	"\n" +
	"GameUpdate\x12\x1c\n" +
	"\tgameWidth\x18\r \x01(\x01R\tgameWidth\x12\x1e\n" +
	"\n" +
	"gameHeight\x18\x0e \x01(\x01R\n" +
	"gameHeight\x12\x18\n" +
	"\ap1Width\x18\x0f \x01(\x01R\ap1Width\x12\x1a\n" +
	"\bp1Height\x18\x10 \x01(\x01R\bp1Height\x12\x18\n" +
	"\ap2Width\x18\x11 \x01(\x01R\ap2Width\x12\x1a\n" +
	"\bp2Height\x18\x12 \x01(\x01R\bp2Height\x12\x1c\n" +
	"\tballWidth\x18\x13 \x01(\x01R\tballWidth\x12\x1e\n" +
	"\n" +
	"ballHeight\x18\x14 \x01(\x01R\n" +
	"ballHeight\x12\x18\n" +
	"\ap1Score\x18\x15 \x01(\x05R\ap1Score\x12\x18\n" +
	"\ap2Score\x18\x16 \x01(\x05R\ap2Score\x12\x14\n" +
	"\x05ballX\x18\x01 \x01(\x01R\x05ballX\x12\x14\n" +
	"\x05ballY\x18\x02 \x01(\x01R\x05ballY\x12\x10\n" +
	"\x03p1X\x18\x03 \x01(\x01R\x03p1X\x12\x10\n" +
	"\x03p1Y\x18\x04 \x01(\x01R\x03p1Y\x12\x10\n" +
	"\x03p2X\x18\x05 \x01(\x01R\x03p2X\x12\x10\n" +
	"\x03p2Y\x18\x06 \x01(\x01R\x03p2Y\x12 \n" +
	"\vp1YVelocity\x18\a \x01(\x01R\vp1YVelocity\x12 \n" +
	"\vp2YVelocity\x18\b \x01(\x01R\vp2YVelocity\x12$\n" +
	"\rballXVelocity\x18\t \x01(\x01R\rballXVelocity\x12$\n" +
	"\rballYVelocity\x18\n" +
	" \x01(\x01R\rballYVelocity\x12\x10\n" +
	"\x03fps\x18\v \x01(\x01R\x03fps\x12\x10\n" +
	"\x03tps\x18\f \x01(\x01R\x03tps\x12\x14\n" +
	"\x05error\x18\x17 \x01(\tR\x05error\x12\x14\n" +
	"\x05debug\x18\x18 \x01(\bR\x05debug\"O\n" +
	"\x17LeaveWaitingRoomRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\"N\n" +
	"\x18LeaveWaitingRoomResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"P\n" +
	"\x18SignalReadyToPlayRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\tR\x06gameId\"O\n" +
	"\x19SignalReadyToPlayResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\xa4\x02\n" +
	"\x10NotificationType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aMESSAGE\x10\x01\x12\x0e\n" +
	"\n" +
	"GAME_START\x10\x02\x12\f\n" +
	"\bGAME_END\x10\x03\x12\x19\n" +
	"\x15OPPONENT_DISCONNECTED\x10\x04\x12\x15\n" +
	"\x11BET_AMOUNT_UPDATE\x10\x05\x12\x14\n" +
	"\x10PLAYER_JOINED_WR\x10\x06\x12\x11\n" +
	"\rON_WR_CREATED\x10\a\x12\x13\n" +
	"\x0fON_PLAYER_READY\x10\b\x12\x11\n" +
	"\rON_WR_REMOVED\x10\t\x12\x12\n" +
	"\x0ePLAYER_LEFT_WR\x10\n" +
	"\x12\x14\n" +
	"\x10COUNTDOWN_UPDATE\x10\v\x12\x16\n" +
	"\x12GAME_READY_TO_PLAY\x10\f\x12\x13\n" +
	"\x0fMATCH_ALLOCATED\x10\r2\x8b\x06\n" +
	"\bPongGame\x122\n" +
	"\tSendInput\x12\x11.pong.PlayerInput\x1a\x10.pong.GameUpdate\"\x00\x12H\n" +
	"\x0fStartGameStream\x12\x1c.pong.StartGameStreamRequest\x1a\x15.pong.GameUpdateBytes0\x01\x12K\n" +
	"\x0fStartNtfnStream\x12\x1c.pong.StartNtfnStreamRequest\x1a\x18.pong.NtfnStreamResponse0\x01\x12T\n" +
	"\x11UnreadyGameStream\x12\x1e.pong.UnreadyGameStreamRequest\x1a\x1f.pong.UnreadyGameStreamResponse\x12T\n" +
	"\x11SignalReadyToPlay\x12\x1e.pong.SignalReadyToPlayRequest\x1a\x1f.pong.SignalReadyToPlayResponse\x12E\n" +
	"\x0eGetWaitingRoom\x12\x18.pong.WaitingRoomRequest\x1a\x19.pong.WaitingRoomResponse\x12H\n" +
	"\x0fGetWaitingRooms\x12\x19.pong.WaitingRoomsRequest\x1a\x1a.pong.WaitingRoomsResponse\x12T\n" +
	"\x11CreateWaitingRoom\x12\x1e.pong.CreateWaitingRoomRequest\x1a\x1f.pong.CreateWaitingRoomResponse\x12N\n" +
	"\x0fJoinWaitingRoom\x12\x1c.pong.JoinWaitingRoomRequest\x1a\x1d.pong.JoinWaitingRoomResponse\x12Q\n" +
	"\x10LeaveWaitingRoom\x12\x1d.pong.LeaveWaitingRoomRequest\x1a\x1e.pong.LeaveWaitingRoomResponse2\xee\x02\n" +
	"\vPongReferee\x12B\n" +
	"\rRefOpenEscrow\x12\x17.pong.OpenEscrowRequest\x1a\x18.pong.OpenEscrowResponse\x12W\n" +
	"\x14RefWaitEscrowFunding\x12\x1e.pong.WaitEscrowFundingRequest\x1a\x1d.pong.WaitEscrowFundingUpdate0\x01\x12B\n" +
	"\vCreateMatch\x12\x18.pong.CreateMatchRequest\x1a\x19.pong.CreateMatchResponse\x12D\n" +
	"\vWaitFunding\x12\x18.pong.WaitFundingRequest\x1a\x19.pong.WaitFundingResponse0\x01\x128\n" +
	"\x10SettlementStream\x12\x0f.pong.ClientMsg\x1a\x0f.pong.ServerMsg(\x010\x01B\vZ\tgrpc/pongb\x06proto3"

var (
	file_pong_proto_rawDescOnce sync.Once
	file_pong_proto_rawDescData []byte
)

func file_pong_proto_rawDescGZIP() []byte {
	file_pong_proto_rawDescOnce.Do(func() {
		file_pong_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pong_proto_rawDesc), len(file_pong_proto_rawDesc)))
	})
	return file_pong_proto_rawDescData
}

var file_pong_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pong_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_pong_proto_goTypes = []any{
	(NotificationType)(0),             // 0: pong.NotificationType
	(*ClientMsg)(nil),                 // 1: pong.ClientMsg
	(*ServerMsg)(nil),                 // 2: pong.ServerMsg
	(*Hello)(nil),                     // 3: pong.Hello
	(*NeedPreSigs)(nil),               // 4: pong.NeedPreSigs
	(*VerifyOk)(nil),                  // 5: pong.VerifyOk
	(*PreSig)(nil),                    // 6: pong.PreSig
	(*PreSigBatch)(nil),               // 7: pong.PreSigBatch
	(*RevealGamma)(nil),               // 8: pong.RevealGamma
	(*Ack)(nil),                       // 9: pong.Ack
	(*Info)(nil),                      // 10: pong.Info
	(*ServerOk)(nil),                  // 11: pong.ServerOk
	(*OpenEscrowRequest)(nil),         // 12: pong.OpenEscrowRequest
	(*OpenEscrowResponse)(nil),        // 13: pong.OpenEscrowResponse
	(*WaitEscrowFundingRequest)(nil),  // 14: pong.WaitEscrowFundingRequest
	(*WaitEscrowFundingUpdate)(nil),   // 15: pong.WaitEscrowFundingUpdate
	(*CreateMatchRequest)(nil),        // 16: pong.CreateMatchRequest
	(*CreateMatchResponse)(nil),       // 17: pong.CreateMatchResponse
	(*EscrowUTXO)(nil),                // 18: pong.EscrowUTXO
	(*WaitFundingRequest)(nil),        // 19: pong.WaitFundingRequest
	(*WaitFundingResponse)(nil),       // 20: pong.WaitFundingResponse
	(*MatchAllocatedNtfn)(nil),        // 21: pong.MatchAllocatedNtfn
	(*UnreadyGameStreamRequest)(nil),  // 22: pong.UnreadyGameStreamRequest
	(*UnreadyGameStreamResponse)(nil), // 23: pong.UnreadyGameStreamResponse
	(*StartNtfnStreamRequest)(nil),    // 24: pong.StartNtfnStreamRequest
	(*NtfnStreamResponse)(nil),        // 25: pong.NtfnStreamResponse
	(*WaitingRoomsRequest)(nil),       // 26: pong.WaitingRoomsRequest
	(*WaitingRoomsResponse)(nil),      // 27: pong.WaitingRoomsResponse
	(*JoinWaitingRoomRequest)(nil),    // 28: pong.JoinWaitingRoomRequest
	(*JoinWaitingRoomResponse)(nil),   // 29: pong.JoinWaitingRoomResponse
	(*CreateWaitingRoomRequest)(nil),  // 30: pong.CreateWaitingRoomRequest
	(*CreateWaitingRoomResponse)(nil), // 31: pong.CreateWaitingRoomResponse
	(*WaitingRoom)(nil),               // 32: pong.WaitingRoom
	(*WaitingRoomRequest)(nil),        // 33: pong.WaitingRoomRequest
	(*WaitingRoomResponse)(nil),       // 34: pong.WaitingRoomResponse
	(*Player)(nil),                    // 35: pong.Player
	(*StartGameStreamRequest)(nil),    // 36: pong.StartGameStreamRequest
	(*GameUpdateBytes)(nil),           // 37: pong.GameUpdateBytes
	(*PlayerInput)(nil),               // 38: pong.PlayerInput
	(*GameUpdate)(nil),                // 39: pong.GameUpdate
	(*LeaveWaitingRoomRequest)(nil),   // 40: pong.LeaveWaitingRoomRequest
	(*LeaveWaitingRoomResponse)(nil),  // 41: pong.LeaveWaitingRoomResponse
	(*SignalReadyToPlayRequest)(nil),  // 42: pong.SignalReadyToPlayRequest
	(*SignalReadyToPlayResponse)(nil), // 43: pong.SignalReadyToPlayResponse
	(*NeedPreSigs_PerInput)(nil),      // 44: pong.NeedPreSigs.PerInput
	(*PreSigBatch_Sig)(nil),           // 45: pong.PreSigBatch.Sig
}
var file_pong_proto_depIdxs = []int32{
	3,  // 0: pong.ClientMsg.hello:type_name -> pong.Hello
	7,  // 1: pong.ClientMsg.presigs:type_name -> pong.PreSigBatch
	9,  // 2: pong.ClientMsg.ack:type_name -> pong.Ack
	5,  // 3: pong.ClientMsg.verify_ok:type_name -> pong.VerifyOk
	4,  // 4: pong.ServerMsg.req:type_name -> pong.NeedPreSigs
	8,  // 5: pong.ServerMsg.reveal:type_name -> pong.RevealGamma
	10, // 6: pong.ServerMsg.info:type_name -> pong.Info
	11, // 7: pong.ServerMsg.ok:type_name -> pong.ServerOk
	44, // 8: pong.NeedPreSigs.inputs:type_name -> pong.NeedPreSigs.PerInput
	6,  // 9: pong.VerifyOk.presigs:type_name -> pong.PreSig
	45, // 10: pong.PreSigBatch.presigs:type_name -> pong.PreSigBatch.Sig
	18, // 11: pong.WaitFundingResponse.utxo:type_name -> pong.EscrowUTXO
	0,  // 12: pong.NtfnStreamResponse.notification_type:type_name -> pong.NotificationType
	32, // 13: pong.NtfnStreamResponse.wr:type_name -> pong.WaitingRoom
	21, // 14: pong.NtfnStreamResponse.match_alloc:type_name -> pong.MatchAllocatedNtfn
	32, // 15: pong.WaitingRoomsResponse.wr:type_name -> pong.WaitingRoom
	32, // 16: pong.JoinWaitingRoomResponse.wr:type_name -> pong.WaitingRoom
	32, // 17: pong.CreateWaitingRoomResponse.wr:type_name -> pong.WaitingRoom
	35, // 18: pong.WaitingRoom.players:type_name -> pong.Player
	35, // 19: pong.WaitingRoomResponse.players:type_name -> pong.Player
	38, // 20: pong.PongGame.SendInput:input_type -> pong.PlayerInput
	36, // 21: pong.PongGame.StartGameStream:input_type -> pong.StartGameStreamRequest
	24, // 22: pong.PongGame.StartNtfnStream:input_type -> pong.StartNtfnStreamRequest
	22, // 23: pong.PongGame.UnreadyGameStream:input_type -> pong.UnreadyGameStreamRequest
	42, // 24: pong.PongGame.SignalReadyToPlay:input_type -> pong.SignalReadyToPlayRequest
	33, // 25: pong.PongGame.GetWaitingRoom:input_type -> pong.WaitingRoomRequest
	26, // 26: pong.PongGame.GetWaitingRooms:input_type -> pong.WaitingRoomsRequest
	30, // 27: pong.PongGame.CreateWaitingRoom:input_type -> pong.CreateWaitingRoomRequest
	28, // 28: pong.PongGame.JoinWaitingRoom:input_type -> pong.JoinWaitingRoomRequest
	40, // 29: pong.PongGame.LeaveWaitingRoom:input_type -> pong.LeaveWaitingRoomRequest
	12, // 30: pong.PongReferee.RefOpenEscrow:input_type -> pong.OpenEscrowRequest
	14, // 31: pong.PongReferee.RefWaitEscrowFunding:input_type -> pong.WaitEscrowFundingRequest
	16, // 32: pong.PongReferee.CreateMatch:input_type -> pong.CreateMatchRequest
	19, // 33: pong.PongReferee.WaitFunding:input_type -> pong.WaitFundingRequest
	1,  // 34: pong.PongReferee.SettlementStream:input_type -> pong.ClientMsg
	39, // 35: pong.PongGame.SendInput:output_type -> pong.GameUpdate
	37, // 36: pong.PongGame.StartGameStream:output_type -> pong.GameUpdateBytes
	25, // 37: pong.PongGame.StartNtfnStream:output_type -> pong.NtfnStreamResponse
	23, // 38: pong.PongGame.UnreadyGameStream:output_type -> pong.UnreadyGameStreamResponse
	43, // 39: pong.PongGame.SignalReadyToPlay:output_type -> pong.SignalReadyToPlayResponse
	34, // 40: pong.PongGame.GetWaitingRoom:output_type -> pong.WaitingRoomResponse
	27, // 41: pong.PongGame.GetWaitingRooms:output_type -> pong.WaitingRoomsResponse
	31, // 42: pong.PongGame.CreateWaitingRoom:output_type -> pong.CreateWaitingRoomResponse
	29, // 43: pong.PongGame.JoinWaitingRoom:output_type -> pong.JoinWaitingRoomResponse
	41, // 44: pong.PongGame.LeaveWaitingRoom:output_type -> pong.LeaveWaitingRoomResponse
	13, // 45: pong.PongReferee.RefOpenEscrow:output_type -> pong.OpenEscrowResponse
	15, // 46: pong.PongReferee.RefWaitEscrowFunding:output_type -> pong.WaitEscrowFundingUpdate
	17, // 47: pong.PongReferee.CreateMatch:output_type -> pong.CreateMatchResponse
	20, // 48: pong.PongReferee.WaitFunding:output_type -> pong.WaitFundingResponse
	2,  // 49: pong.PongReferee.SettlementStream:output_type -> pong.ServerMsg
	35, // [35:50] is the sub-list for method output_type
	20, // [20:35] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_pong_proto_init() }
func file_pong_proto_init() {
	if File_pong_proto != nil {
		return
	}
	file_pong_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientMsg_Hello)(nil),
		(*ClientMsg_Presigs)(nil),
		(*ClientMsg_Ack)(nil),
		(*ClientMsg_VerifyOk)(nil),
	}
	file_pong_proto_msgTypes[1].OneofWrappers = []any{
		(*ServerMsg_Req)(nil),
		(*ServerMsg_Reveal)(nil),
		(*ServerMsg_Info)(nil),
		(*ServerMsg_Ok)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pong_proto_rawDesc), len(file_pong_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pong_proto_goTypes,
		DependencyIndexes: file_pong_proto_depIdxs,
		EnumInfos:         file_pong_proto_enumTypes,
		MessageInfos:      file_pong_proto_msgTypes,
	}.Build()
	File_pong_proto = out.File
	file_pong_proto_goTypes = nil
	file_pong_proto_depIdxs = nil
}
